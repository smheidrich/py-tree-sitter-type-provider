input:
  name: talon
  file: data/node-types/talon.json
  class_prefix: Talon
  extra: [comment]
  error_as_node: false
output: |-
  from_tree_sitter(self, tsvalue: Union[tree_sitter.Tree, tree_sitter.Node, tree_sitter.TreeCursor], *, encoding: str = 'utf-8') -> Node
  TalonAction(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], action_name: 'TalonIdentifier', arguments: 'TalonArgumentList') -> None
  TalonAnd(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonAnd, TalonMatch, TalonNot, TalonComment]]) -> None
  TalonArgumentList(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonAction, TalonBinaryOperator, TalonFloat, TalonInteger, TalonKeyAction, TalonParenthesizedExpression, TalonSleepAction, TalonString, TalonVariable, TalonComment]]) -> None
  TalonAssignment(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], left: 'TalonIdentifier', right: Union[TalonAction, TalonBinaryOperator, TalonFloat, TalonInteger, TalonKeyAction, TalonParenthesizedExpression, TalonSleepAction, TalonString, TalonVariable]) -> None
  TalonBinaryOperator(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], left: Union[TalonAction, TalonBinaryOperator, TalonFloat, TalonInteger, TalonKeyAction, TalonParenthesizedExpression, TalonSleepAction, TalonString, TalonVariable], operator: 'TalonOperator', right: Union[TalonAction, TalonBinaryOperator, TalonFloat, TalonInteger, TalonKeyAction, TalonParenthesizedExpression, TalonSleepAction, TalonString, TalonVariable]) -> None
  TalonBlock(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonAssignment, TalonDocstring, TalonExpression, TalonComment]]) -> None
  TalonCapture(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], capture_name: 'TalonIdentifier') -> None
  TalonChoice(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonCapture, TalonEndAnchor, TalonList, TalonOptional, TalonParenthesizedRule, TalonRepeat, TalonRepeat1, TalonSeq, TalonStartAnchor, TalonWord, TalonComment]]) -> None
  TalonCommand(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], rule: 'TalonRule', script: 'TalonBlock') -> None
  TalonComment(text: str, type_name: str, start_position: Point, end_position: Point) -> None
  TalonContext(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonAnd, TalonDocstring, TalonMatch, TalonNot, TalonOr, TalonComment]]) -> None
  TalonDocstring(text: str, type_name: str, start_position: Point, end_position: Point) -> None
  TalonEndAnchor(text: str, type_name: str, start_position: Point, end_position: Point) -> None
  TalonExpression(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], expression: Union[TalonAction, TalonBinaryOperator, TalonFloat, TalonInteger, TalonKeyAction, TalonParenthesizedExpression, TalonSleepAction, TalonString, TalonVariable]) -> None
  TalonFloat(text: str, type_name: str, start_position: Point, end_position: Point) -> None
  TalonIdentifier(text: str, type_name: str, start_position: Point, end_position: Point) -> None
  TalonImplicitString(text: str, type_name: str, start_position: Point, end_position: Point) -> None
  TalonIncludeTag(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], tag: 'TalonIdentifier') -> None
  TalonInteger(text: str, type_name: str, start_position: Point, end_position: Point) -> None
  TalonInterpolation(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonAction, TalonBinaryOperator, TalonFloat, TalonInteger, TalonKeyAction, TalonParenthesizedExpression, TalonSleepAction, TalonString, TalonVariable, TalonComment]]) -> None
  TalonKeyAction(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], arguments: 'TalonImplicitString') -> None
  TalonList(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], list_name: 'TalonIdentifier') -> None
  TalonMatch(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], key: 'TalonIdentifier', pattern: 'TalonImplicitString') -> None
  TalonNot(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonMatch, TalonComment]]) -> None
  TalonNumber(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonFloat, TalonInteger, TalonComment]]) -> None
  TalonOperator(text: str, type_name: str, start_position: Point, end_position: Point) -> None
  TalonOptional(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonCapture, TalonChoice, TalonEndAnchor, TalonList, TalonOptional, TalonParenthesizedRule, TalonRepeat, TalonRepeat1, TalonSeq, TalonStartAnchor, TalonWord, TalonComment]]) -> None
  TalonOr(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonAnd, TalonMatch, TalonNot, TalonComment]]) -> None
  TalonParenthesizedExpression(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonAction, TalonBinaryOperator, TalonFloat, TalonInteger, TalonKeyAction, TalonParenthesizedExpression, TalonSleepAction, TalonString, TalonVariable, TalonComment]]) -> None
  TalonParenthesizedRule(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonCapture, TalonChoice, TalonEndAnchor, TalonList, TalonOptional, TalonParenthesizedRule, TalonRepeat, TalonRepeat1, TalonSeq, TalonStartAnchor, TalonWord, TalonComment]]) -> None
  TalonRegexEscapeSequence(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonRegexEscapeSequence, TalonComment]]) -> None
  TalonRepeat(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonCapture, TalonList, TalonOptional, TalonParenthesizedRule, TalonRepeat, TalonRepeat1, TalonWord, TalonComment]]) -> None
  TalonRepeat1(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonCapture, TalonList, TalonOptional, TalonParenthesizedRule, TalonRepeat, TalonRepeat1, TalonWord, TalonComment]]) -> None
  TalonRule(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonCapture, TalonChoice, TalonEndAnchor, TalonList, TalonOptional, TalonParenthesizedRule, TalonRepeat, TalonRepeat1, TalonSeq, TalonStartAnchor, TalonWord, TalonComment]]) -> None
  TalonSeq(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonCapture, TalonList, TalonOptional, TalonParenthesizedRule, TalonRepeat, TalonRepeat1, TalonWord, TalonComment]]) -> None
  TalonSettings(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonBlock, TalonComment]]) -> None
  TalonSleepAction(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], arguments: 'TalonImplicitString') -> None
  TalonSourceFile(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonCommand, TalonContext, TalonIncludeTag, TalonSettings, TalonComment]]) -> None
  TalonStartAnchor(text: str, type_name: str, start_position: Point, end_position: Point) -> None
  TalonString(text: str, type_name: str, start_position: Point, end_position: Point, children: list[Union[TalonInterpolation, TalonStringContent, TalonStringEscapeSequence, TalonComment]]) -> None
  TalonStringContent(text: str, type_name: str, start_position: Point, end_position: Point) -> None
  TalonStringEscapeSequence(text: str, type_name: str, start_position: Point, end_position: Point) -> None
  TalonVariable(text: str, type_name: str, start_position: Point, end_position: Point, children: list['TalonComment'], variable_name: 'TalonIdentifier') -> None
  TalonWord(text: str, type_name: str, start_position: Point, end_position: Point) -> None
